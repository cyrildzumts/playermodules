/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -a mpris2_Adaptor org.mpris.MediaPlayer2.xml
 *
 * qdbusxml2cpp is Copyright (C) 2013 Digia Plc and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "mpris2_Adaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class MediaPlayer2Adaptor
 */

MediaPlayer2Adaptor::MediaPlayer2Adaptor(QObject *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

MediaPlayer2Adaptor::~MediaPlayer2Adaptor()
{
    // destructor
}

QString MediaPlayer2Adaptor::applicationName() const
{
    // get the value of property ApplicationName
    return parent()->property("ApplicationName").toString();
}

void MediaPlayer2Adaptor::setApplicationName(const QString &value)
{
    // set the value of property ApplicationName
    parent()->setProperty("ApplicationName", QVariant::fromValue(value));
}

bool MediaPlayer2Adaptor::canQuit() const
{
    // get the value of property CanQuit
    return parent()->property("CanQuit").toBool();
}

bool MediaPlayer2Adaptor::canRaise() const
{
    // get the value of property CanRaise
    return parent()->property("CanRaise").toBool();
}

QString MediaPlayer2Adaptor::desktopEntry() const
{
    // get the value of property DesktopEntry
    return parent()->property("DesktopEntry").toString();
}

bool MediaPlayer2Adaptor::hasTrackList() const
{
    // get the value of property HasTrackList
    return parent()->property("HasTrackList").toBool();
}

QString MediaPlayer2Adaptor::identity() const
{
    // get the value of property Identity

    return parent()->property("Identity").toString();
}

QStringList MediaPlayer2Adaptor::supportedMimeTypes() const
{
    // get the value of property SupportedMimeTypes
    return parent()->property("SupportedMimeTypes").toStringList();
}

QString MediaPlayer2Adaptor::ApplicationName()
{
    // handle method call org.mpris.MediaPlayer2.ApplicationName


    return parent()->property("ApplicationName").toString();
}

bool MediaPlayer2Adaptor::CanQuit()
{
    // handle method call org.mpris.MediaPlayer2.CanQuit
    bool out0;
    QMetaObject::invokeMethod(parent(), "CanQuit", Q_RETURN_ARG(bool, out0));
    return out0;
}

bool MediaPlayer2Adaptor::CanRaise()
{
    // handle method call org.mpris.MediaPlayer2.CanRaise
    bool out0;
    QMetaObject::invokeMethod(parent(), "CanRaise", Q_RETURN_ARG(bool, out0));
    return out0;
}

bool MediaPlayer2Adaptor::CanSetFullscreen()
{
    // handle method call org.mpris.MediaPlayer2.CanSetFullscreen
    bool out0;
    QMetaObject::invokeMethod(parent(), "CanSetFullscreen", Q_RETURN_ARG(bool, out0));
    return out0;
}

QString MediaPlayer2Adaptor::DesktopEntry()
{
    // handle method call org.mpris.MediaPlayer2.DesktopEntry
    //QString out0 ;
   // QMetaObject::invokeMethod(parent(), "DesktopEntry", Q_RETURN_ARG(QString, out0));
    return parent()->property("DesktopEntry").toString();
}

bool MediaPlayer2Adaptor::Fullscreen()
{
    // handle method call org.mpris.MediaPlayer2.Fullscreen
    bool out0;
    QMetaObject::invokeMethod(parent(), "Fullscreen", Q_RETURN_ARG(bool, out0));
    return out0;
}

bool MediaPlayer2Adaptor::HasTrackList()
{
    // handle method call org.mpris.MediaPlayer2.HasTrackList
    bool out0;
    QMetaObject::invokeMethod(parent(), "HasTrackList", Q_RETURN_ARG(bool, out0));
    return out0;
}

QString MediaPlayer2Adaptor::Identity()
{
    // handle method call org.mpris.MediaPlayer2.Identity
    QString out0;
    QMetaObject::invokeMethod(parent(), "Identity", Q_RETURN_ARG(QString, out0));
    return out0;
}

void MediaPlayer2Adaptor::SetFullscreen(bool in0)
{
    // handle method call org.mpris.MediaPlayer2.SetFullscreen
    QMetaObject::invokeMethod(parent(), "SetFullscreen", Q_ARG(bool, in0));
}

QStringList MediaPlayer2Adaptor::SupportedMimeTypes()
{
    // handle method call org.mpris.MediaPlayer2.SupportedMimeTypes
    QStringList out0;
    QMetaObject::invokeMethod(parent(), "SupportedMimeTypes", Q_RETURN_ARG(QStringList, out0));
    return out0;
}

QStringList MediaPlayer2Adaptor::SupportedUriSchemes()
{
    // handle method call org.mpris.MediaPlayer2.SupportedUriSchemes
    QStringList out0;
    QMetaObject::invokeMethod(parent(), "SupportedUriSchemes", Q_RETURN_ARG(QStringList, out0));
    return out0;
}

void MediaPlayer2Adaptor::quit()
{
    // handle method call org.mpris.MediaPlayer2.quit
    QMetaObject::invokeMethod(parent(), "quit");

}

void MediaPlayer2Adaptor::raise()
{
    // handle method call org.mpris.MediaPlayer2.raise
    QMetaObject::invokeMethod(parent(), "raise");
}



